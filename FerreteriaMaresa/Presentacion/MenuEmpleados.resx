<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnHome.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>